# GitHub Setup and Local Development Guide

This guide explains how to set up your multiplication game project on GitHub and run it locally.

## Creating a GitHub Repository

1. **Create a new repository on GitHub**:
   - Go to [GitHub](https://github.com/) and log in to your account
   - Click the "+" button in the top right corner, then select "New repository"
   - Name your repository (e.g., "multiplication-game")
   - Add an optional description
   - Choose repository visibility (public or private)
   - Leave "Initialize this repository with a README" unchecked since we'll push our existing code
   - Click "Create repository"

2. **Initialize your local repository**:
   ```bash
   # Navigate to your project folder
   cd path/to/multiplication-game

   # Initialize a Git repository
   git init

   # Add all files to the staging area
   git add .

   # Commit the staged files
   git commit -m "Initial commit"

   # Connect your local repository to GitHub
   git branch -M main
   git remote add origin https://github.com/yourusername/multiplication-game.git
   git push -u origin main
   ```

## Cloning and Running Locally

When you want to clone your repository to another machine or share it with someone:

1. **Clone the repository**:
   ```bash
   git clone https://github.com/yourusername/multiplication-game.git
   cd multiplication-game
   ```

2. **Install dependencies**:
   ```bash
   npm install
   # or
   yarn install
   ```

3. **Start the development server**:
   ```bash
   npm start
   # or
   yarn start
   ```

4. Your browser should automatically open to `http://localhost:3000` with the running application

## Setting Up a Fresh Project

If you prefer to start from scratch rather than pushing existing code:

1. **Create a new React app with Create React App**:
   ```bash
   npx create-react-app multiplication-game
   cd multiplication-game
   ```

2. **Install Tailwind CSS**:
   ```bash
   npm install -D tailwindcss postcss autoprefixer
   npx tailwindcss init -p
   ```

3. **Configure Tailwind CSS**:
   - Update `tailwind.config.js` with the content paths
   - Add the Tailwind directives to your CSS
   - See [Tailwind CSS with Create React App](https://tailwindcss.com/docs/guides/create-react-app) for detailed instructions

4. **Create the project structure**:
   - Create the folders for components and utilities
   - Add the source files for each component

5. **Start the development server**:
   ```bash
   npm start
   ```

## Development Workflow

1. **Make changes to your code**
2. **Test locally** using `npm start`
3. **Commit and push changes to GitHub**:
   ```bash
   git add .
   git commit -m "Description of changes"
   git push
   ```

4. **To pull the latest changes** when working across multiple devices:
   ```bash
   git pull
   ```

## Continuous Integration (Optional)

You can set up GitHub Actions to automatically run tests or build your project whenever you push changes:

1. Create a `.github/workflows` directory in your project
2. Add a workflow file like `ci.yml` to define your CI pipeline
3. Configure it to install dependencies and run tests/builds

## Deployment (Optional)

You can deploy your React application to various platforms:

- **GitHub Pages**: Add the `gh-pages` package and configure it in `package.json`
- **Vercel**: Connect your GitHub repository to Vercel for automatic deployments
- **Netlify**: Connect your GitHub repository to Netlify for automatic deployments
